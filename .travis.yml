language: node_js
node_js:
  - '10'

env:
  global:
    - DEV_IMAGE_NAME=luckjs/ts-luck-ui
    - DEV_CONTAINER_NAME=luck-ui_develop
    - DEV_VIRTUAL_HOST=testdevelop.luck.org.pl

    - PROD_IMAGE_NAME=luckjs/luck-ui
    - PROD_CONTAINER_NAME=luck-ui_master
    - PROD_VIRTUAL_HOST=luck.org.pl

build: &build
  stage: build
  services:
    - docker
  script:
    - echo $IMAGE_NAME
    - docker build . -t $IMAGE_NAME
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push $IMAGE_NAME

deploy: &deploy
  stage: deploy
  before_script:
    - openssl aes-256-cbc -K $encrypted_e8fe58cdf4cd_key -iv $encrypted_e8fe58cdf4cd_iv
      -in .travis/id_rsa.enc -out .travis/id_rsa -d
    - eval "$(ssh-agent -s)"
    - cp .travis/id_rsa ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-add ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - ssh-keyscan $HOST_IP > ~/.ssh/known_hosts
  script: skip
  deploy:
   - provider: script
     skip_cleanup: true
     script: bash .travis/deploy.sh $HOST_IP $DOCKER_PASSWORD $DOCKER_USERNAME $IMAGE_NAME $CONTAINER_NAME
     on:
       branch: develop
   - provider: script
     skip_cleanup: true
     script: bash .travis/deploy.sh $HOST_IP $DOCKER_PASSWORD $DOCKER_USERNAME $IMAGE_NAME $CONTAINER_NAME
     on:
       branch: master

stages:
  - build
  - deploy

jobs:
  include:
    - <<: *build
      name: 'dev build'
      if: branch = develop
      env: IMAGE_NAME=$DEV_IMAGE_NAME

    - <<: *build
      name: 'prod build'
      if: branch = master
      env: IMAGE_NAME=$PROD_IMAGE_NAME

    - <<: *deploy
      name: 'dev deploy'
      if: branch = develop
      env:
        - IMAGE_NAME=$DEV_IMAGE_NAME
        - CONTAINER_NAME=$DEV_CONTAINER_NAME
        - VIRTUAL_HOST=$DEV_VIRTUAL_HOST

    - <<: *deploy
      name: 'prod deploy'
      if: branch = master
      env:
        - IMAGE_NAME=$PROD_IMAGE_NAME
        - CONTAINER_NAME=$PROD_CONTAINER_NAME
        - VIRTUAL_HOST=$PROD_VIRTUAL_HOST
